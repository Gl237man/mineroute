// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "03/05/2014 20:01:03"

module 	test (
	sig1,
	sig2,
	sig4,
	sig3,
	counter,
	clk);
input 	[1:0] sig1;
input 	[1:0] sig2;
input 	[1:0] sig4;
output 	[1:0] sig3;
output 	[3:0] counter;
input 	clk;
wire \sig3~0 ;
wire \sig3~1 ;
wire \clk~clkctrl ;
wire \counter[0]~3 ;
wire \counter[0]~reg0 ;
wire \counter[1]~0 ;
wire \counter[1]~reg0 ;
wire \counter[2]~1 ;
wire \counter[2]~reg0 ;
wire \counter[3]~2 ;
wire \counter[3]~reg0 ;


wire gnd;
wire vcc;

assign gnd = 1'b0;
assign vcc = 1'b1;


cycloneii_lcell_comb \sig3~0_I (
	.datab(sig1[0]),
	.datac(sig4[0]),
	.datad(sig2[0]),
	.combout(\sig3~0 ));
defparam \sig3~0_I .sum_lutc_input = "datac";
defparam \sig3~0_I .lut_mask = "FCF0";

cycloneii_lcell_comb \sig3~1_I (
	.datab(sig2[1]),
	.datac(sig4[1]),
	.datad(sig1[1]),
	.combout(\sig3~1 ));
defparam \sig3~1_I .sum_lutc_input = "datac";
defparam \sig3~1_I .lut_mask = "FCF0";

cycloneii_clkctrl \clk~clkctrl_I (
	.inclk({clk}),
	.outclk(\clk~clkctrl ));
defparam \clk~clkctrl_I .clock_type = "Global Clock";
defparam \clk~clkctrl_I .ena_register_mode = "none";

cycloneii_lcell_comb \counter[0]~3_I (
	.datac(\counter[0]~reg0 ),
	.combout(\counter[0]~3 ));
defparam \counter[0]~3_I .sum_lutc_input = "datac";
defparam \counter[0]~3_I .lut_mask = "0F0F";

cycloneii_lcell_ff \counter[0]~reg0_I (
	.clk(\clk~clkctrl ),
	.datain(\counter[0]~3 ),
	.regout(\counter[0]~reg0 ));

cycloneii_lcell_comb \counter[1]~0_I (
	.datac(\counter[1]~reg0 ),
	.datad(\counter[0]~reg0 ),
	.combout(\counter[1]~0 ));
defparam \counter[1]~0_I .sum_lutc_input = "datac";
defparam \counter[1]~0_I .lut_mask = "0FF0";

cycloneii_lcell_ff \counter[1]~reg0_I (
	.clk(\clk~clkctrl ),
	.datain(\counter[1]~0 ),
	.regout(\counter[1]~reg0 ));

cycloneii_lcell_comb \counter[2]~1_I (
	.datab(\counter[0]~reg0 ),
	.datac(\counter[2]~reg0 ),
	.datad(\counter[1]~reg0 ),
	.combout(\counter[2]~1 ));
defparam \counter[2]~1_I .sum_lutc_input = "datac";
defparam \counter[2]~1_I .lut_mask = "3CF0";

cycloneii_lcell_ff \counter[2]~reg0_I (
	.clk(\clk~clkctrl ),
	.datain(\counter[2]~1 ),
	.regout(\counter[2]~reg0 ));

cycloneii_lcell_comb \counter[3]~2_I (
	.dataa(\counter[2]~reg0 ),
	.datab(\counter[0]~reg0 ),
	.datac(\counter[3]~reg0 ),
	.datad(\counter[1]~reg0 ),
	.combout(\counter[3]~2 ));
defparam \counter[3]~2_I .sum_lutc_input = "datac";
defparam \counter[3]~2_I .lut_mask = "78F0";

cycloneii_lcell_ff \counter[3]~reg0_I (
	.clk(\clk~clkctrl ),
	.datain(\counter[3]~2 ),
	.regout(\counter[3]~reg0 ));

assign sig3[0] = \sig3~0 ;

assign sig3[1] = \sig3~1 ;

assign counter[0] = \counter[0]~reg0 ;

assign counter[1] = \counter[1]~reg0 ;

assign counter[2] = \counter[2]~reg0 ;

assign counter[3] = \counter[3]~reg0 ;

endmodule
